"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactstrap = require("reactstrap");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _getYearList = (minDate, maxDate) => {
  var minYear = minDate ? new Date(minDate).getFullYear() : 1970;
  var maxYear = maxDate ? new Date(maxDate).getFullYear() : 2045;
  var yList = [];

  for (var y = minYear; y <= maxYear; y++) {
    yList.push(y);
  }

  return yList;
};

var PickMonthDefault = _ref => {
  var {
    displayDate,
    minDate,
    maxDate,
    monthLabels,
    onChangeMonth,
    onChangeYear
  } = _ref;
  var [month, setMonth] = (0, _react.useState)(new Date(displayDate).getMonth());
  var [year, setYear] = (0, _react.useState)(new Date(displayDate).getFullYear());
  var [yearList, setYearList] = (0, _react.useState)(_getYearList(minDate, maxDate));
  (0, _react.useEffect)(() => {
    setMonth(new Date(displayDate).getMonth());
    setYear(new Date(displayDate).getFullYear());
  }, [displayDate]);
  (0, _react.useEffect)(() => {
    setYearList(_getYearList(minDate, maxDate));
  }, [minDate, maxDate]);

  var handleChangeMonth = ev => {
    var m = ev.target.value;
    setMonth(m);
    onChangeMonth(m);
  };

  var handleChangeYear = ev => {
    var y = ev.target.value;
    setYear(y);
    onChangeYear(y);
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "rdp-header-pick-month-default",
    style: {
      display: 'flex',
      flexFlow: 'row',
      flexWrap: 'nowrap'
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "rdp-header-pick-month-default-month",
    style: {
      flex: '2 1 auto'
    }
  }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
    type: "select",
    name: "rdp-header-pick-month-default-month",
    style: {
      lineHeight: "1.5",
      fontSize: "0.875rem",
      padding: "0.2rem"
    },
    value: month,
    onChange: handleChangeMonth
  }, monthLabels.map((lmonth, lidx) => {
    return /*#__PURE__*/_react.default.createElement("option", {
      key: "month_".concat(lidx),
      value: lidx
    }, lmonth);
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: "rdp-header-pick-month-default-year",
    style: {
      flex: '1 1 67px'
    }
  }, /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
    type: "select",
    name: "rdp-header-pick-month-default-year",
    style: {
      lineHeight: "1.5",
      fontSize: "0.875rem",
      padding: "0.2rem"
    },
    value: year,
    onChange: handleChangeYear
  }, yearList.map(lyear => {
    return /*#__PURE__*/_react.default.createElement("option", {
      key: "year".concat(lyear),
      value: lyear
    }, lyear);
  }))));
};

var _default = PickMonthDefault;
exports.default = _default;